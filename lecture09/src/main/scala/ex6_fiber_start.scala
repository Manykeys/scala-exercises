import scala.concurrent.duration.DurationInt

object ex6_fiber_start extends App {
  // –û–¥–∏–Ω –ø–æ–≤–∞—Ä –±–µ—Å–∫–æ–Ω–µ—á–Ω–æ —Ä–µ–∂–µ—Ç –∫–∞—Ä—Ç–æ—à–∫—É —Å –∑–∞–¥–µ—Ä–∂–∫–æ–π
  def cutPotatoes: IO[Unit] =
    for {
      _ <- IO.sleep(1.second)
      _ <- IO(println("üî™ –†–µ–∂–µ–º –∫–∞—Ä—Ç–æ—à–∫—É"))
      _ <- cutPotatoes
    } yield ()

  // –î—Ä—É–≥–æ–π –ø–æ–≤–∞—Ä –±–µ—Å–∫–æ–Ω–µ—á–Ω–æ —Ä–µ–∂–µ—Ç –º–æ—Ä–∫–æ–≤–∫—É —Å –∑–∞–¥–µ—Ä–∂–∫–æ–π
  def cutCarrots: IO[Unit] =
    for {
      _ <- IO.sleep(1.second)
      _ <- IO(println("üî™ –†–µ–∂–µ–º –º–æ—Ä–∫–æ–≤–∫—É"))
      _ <- cutCarrots
    } yield ()

  val task: IO[Unit] = for {
    fiber1 <- cutPotatoes.start // –ó–∞–ø—É—Å–∫–∞–µ–º —Ñ–∞–π–±–µ—Ä 1
    fiber2 <- cutCarrots.start // –ó–∞–ø—É—Å–∫–∞–µ–º —Ñ–∞–π–±–µ—Ä 2
  } yield ()

  task.unsafeRunSync() // –ó–∞–ø—É—Å–∫ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ —Ñ–∞–π–±–µ—Ä–∞. –û—Å–Ω–æ–≤–Ω–æ–π —Ñ–∞–π–±–µ—Ä –∑–∞–ø—É—Å—Ç–∏—Ç —Ñ–∞–π–±–µ—Ä—ã 1 –∏ 2.
  Thread.sleep(10000)
}
